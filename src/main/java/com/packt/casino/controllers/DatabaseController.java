package com.packt.casino.controllers;

import com.packt.casino.Service.Impl.GamesServiceImpl;
import com.packt.casino.Service.Impl.UserServiceImpl;
import com.packt.casino.domain.Game;
import com.packt.casino.domain.User;
import com.packt.casino.domain.repository.GamesRepository;
import com.packt.casino.domain.repository.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import javax.annotation.Resource;



@Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
class DatabaseController
{

	// This means to get the bean called userRepository
	// Which is auto-generated by Spring, we will use it to handle the data
	@Resource(name = "UserService")
	@Autowired
	private UserServiceImpl userService;
	@Autowired
	@Resource(name = "GamesService")
	private GamesServiceImpl gamesService;
	@Autowired
	private UserRepository userRepository;
	@Autowired
	private GamesRepository gamesRepository;

	User user = new User();
	Game game = new Game();

	@RequestMapping(path = "/addUser") // Map ONLY POST Requests
	public
	String addNewUser()
	{
		// @ means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request


		userService.add(user);

		return "Saved";
	}
	@RequestMapping(path = "/addGame") // Map ONLY POST Requests
	public
	String addNewGame()
	{
	// @ means the returned String is the response, not a view name
	// @RequestParam means it is a parameter from the GET or POST request

		gamesService.add(game);
		return "Saved";
	}

	@GetMapping(path = "/getAllUsers")
	public
	String getAllUsers(Model model)
	{
		model.addAttribute("findAllUsers", userService.findAll());
		return "seeAllUsers";
	}

	@GetMapping(path = "/getAllGames")
	public
	String getAllGames(Model model)
	{
		// This returns a JSON or XML with the users
		model.addAttribute("findAllGames", gamesService.findAll());
		return "seeAllGames";
	}






	@RequestMapping(path = "/getEverything")
	public String getAll(Model model)
	{
		model.addAttribute("findAllGames", gamesService.findAll());
		model.addAttribute("findAllUsers", userService.findAll());
		model.addAttribute("findUserById", userService.findById());
		model.addAttribute("findGameById", gamesService.findById());
		return "seeAll";
	}
	@RequestMapping(path = "/deleteUser")
	public  String deleteUser()
	{
		userService.remove();
		return "deleted";
	}
	@RequestMapping(path = "/deleteGame")
	public  String deleteGame()
	{
		gamesService.remove();
		return "deleted";
	}

	@RequestMapping(path = "/updateUser")
	public  String updateUser()
	{
		userService.update(user);
		return "updated";
	}

	@RequestMapping(path = "/updateGame")
	public  String updateGame()
	{
		gamesService.update(game);
		return "updated";
	}

	@RequestMapping(path = "/findUserById")
	public  String findUserById(Model model)
	{
		model.addAttribute("findUserById", userService.findById());
		return "findUser";
	}

	@RequestMapping(path = "/findGameById")
	public  String findGameById(Model model)
	{
		model.addAttribute("findGameById", gamesService.findById());
		return "findGame";
	}

}